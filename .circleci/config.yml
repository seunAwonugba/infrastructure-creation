version: 2.1

orbs:
    aws-cli: circleci/aws-cli@2.0.3

commands:
    destroy-environment:
        steps:
            - run:
                  name: Destroy environment
                  when: on_fail
                  command: |
                      aws cloudformation delete-stack --stack-name myStack-{CIRCLE_WORKFLOW_ID:0:7}

jobs:
    # create-infrastructure:
    #     docker:
    #         - image: amazon/aws-cli

    #     steps:
    #         - checkout
    #         - run:
    #               name: Create cloud formation stack
    #               command: |
    #                   aws cloudformation deploy \
    #                   --template-file template.yml \
    #                   --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
    #                   --region us-east-1

    # configure_infrastructure:
    #     docker:
    #         - image: python:3.7-alpine3.11
    #     steps:
    #         - checkout
    #         - add_ssh_keys:
    #               fingerprints:
    #                   ["2e:49:ff:97:dc:20:4a:f7:3c:f0:96:c6:3e:52:2a:b2"]
    #         - run:
    #               name: Install Ansible
    #               command: |
    #                   apk add --update ansible
    #         - run:
    #               name: Run Playbook and Configure server
    #               command: |
    #                   ansible-playbook -i inventory.txt main4.yml

    create_infrastructure:
        docker:
            - image: amazon/aws-cli
        steps:
            - checkout
            - run:
                  name: Create Cloudformation Stack
                  command: |
                      aws cloudformation deploy \
                      --template-file template.yml \
                      --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \

    # smoke_test:
    #     docker:
    #         - image: alphine-latest
    #     steps:
    #         - run: apk add --update curl
    #         - run:
    #               name: smoke test
    #               command: |
    #                   URL="https://blog.udacity.com/"
    #                   if curl -s --head ${URL}
    #                   then
    #                     return 0
    #                   else
    #                     return 1
    #                   fi

    smoke_test:
        docker:
            - image: alpine:latest
        steps:
            - run:
                  name: Test job
                  command: return 1
            - destroy_environment
workflows:
    ci_cd_workflow:
        jobs:
            - create_infrastructure
            # - configure_infrastructure
            - smoke_test
